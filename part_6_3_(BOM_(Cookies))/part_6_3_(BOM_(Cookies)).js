// ██████████████████████████████████████████████████████████████████████████████████████████████████████████████
// ██████████████████████████████████████████████████████████████████████████████████████████████████████████████
// ██████████████████████████████████████████████████████████████████████████████████████████████████████████████
// ██████████████████████████████████████████████████████████████████████████████████████████████████████████████
// ██████████████████████████████████████████████████████████████████████████████████████████████████████████████
// ██████████████████████████████████████████████████████████████████████████████████████████████████████████████

// □■□■ Cookie describtion ( !!!! Dont UnComment !!!!)

// □■□■ JavaScript Cookies
// □■□■ Cookies let you store user information in web browser .

// □■□■ What are Cookies?
// □■□■      Cookies are data, stored in small text files, on your browser.

// □■□■ Cookie Properties : 
// □■□■      1 - variable will delete when exit browser BUT Cookies dosn't delete.
// □■□■      2 - Cookies are like object in js and Dictionary in python ( Key = Value ) ⟶⟶⟶ ( Name = 'alireza' )


// □■□■  Example -- using cookies 
// □■□■      When a user visits a web page, his/her name can be stored in a cookie.
// □■□■      Next time the user visits the page, the cookie "remembers" his/her name.


// ██████████████████████████████████████████████████████████████████████████████████████████████████████████████
// ██████████████████████████████████████████████████████████████████████████████████████████████████████████████
// ██████████████████████████████████████████████████████████████████████████████████████████████████████████████
// ██████████████████████████████████████████████████████████████████████████████████████████████████████████████
// ██████████████████████████████████████████████████████████████████████████████████████████████████████████████
// ██████████████████████████████████████████████████████████████████████████████████████████████████████████████

// // □■□■ Create a Cookie with JavaScript
// // □■□■     * Manage Cookies with (document.cookie) Property.

// document.cookie = 'userName=Alireza'

// █▒▒▒▒▒▒▒▒▒█▒▒▒▒▒▒▒▒▒█▒▒▒▒▒▒▒▒▒█▒▒▒▒▒▒▒▒▒█▒▒▒▒▒▒▒▒▒█▒▒▒▒▒▒▒▒▒
// █▒▒▒▒▒▒▒▒▒█▒▒▒▒▒▒▒▒▒█▒▒▒▒▒▒▒▒▒█▒▒▒▒▒▒▒▒▒█▒▒▒▒▒▒▒▒▒█▒▒▒▒▒▒▒▒▒

// // □■□■ Add an expiry date to cookie. ( default ⯈⯈⯈ Delete after exit browser )
// // □■□■ Tip ➤➤➤ Cookies that have been sent from the server don't create in this way.

// document.cookie = "username=Alireza; expires=Thu, 18 Dec 2023, 12:00:00 UTC; path=/";

// █▒▒▒▒▒▒▒▒▒█▒▒▒▒▒▒▒▒▒█▒▒▒▒▒▒▒▒▒█▒▒▒▒▒▒▒▒▒█▒▒▒▒▒▒▒▒▒█▒▒▒▒▒▒▒▒▒
// █▒▒▒▒▒▒▒▒▒█▒▒▒▒▒▒▒▒▒█▒▒▒▒▒▒▒▒▒█▒▒▒▒▒▒▒▒▒█▒▒▒▒▒▒▒▒▒█▒▒▒▒▒▒▒▒▒

// // □■□■ path parameter ⯈⯈⯈ tell the browser what path the cookie belongs to
// // □■□■ default        ⯈⯈⯈ the cookie belongs to the current page.

// document.cookie = "username=Alireza; expires=Thu, 18 Dec 2023 12:00:00 UTC; path=/";

// ██████████████████████████████████████████████████████████████████████████████████████████████████████████████
// ██████████████████████████████████████████████████████████████████████████████████████████████████████████████
// ██████████████████████████████████████████████████████████████████████████████████████████████████████████████
// ██████████████████████████████████████████████████████████████████████████████████████████████████████████████
// ██████████████████████████████████████████████████████████████████████████████████████████████████████████████
// ██████████████████████████████████████████████████████████████████████████████████████████████████████████████

// // □■□■ Read a Cookie with JavaScript

// document.cookie = 'userName=Alireza'
// document.cookie = 'theme=dark'
// document.cookie = 'shop=1 item'

// let x = document.cookie;
// console.log(x)

// // □■□■ document.cookie will return all cookies in one string much like: cookie1=value; cookie2=value; cookie3=value;


// ██████████████████████████████████████████████████████████████████████████████████████████████████████████████
// ██████████████████████████████████████████████████████████████████████████████████████████████████████████████
// ██████████████████████████████████████████████████████████████████████████████████████████████████████████████
// ██████████████████████████████████████████████████████████████████████████████████████████████████████████████
// ██████████████████████████████████████████████████████████████████████████████████████████████████████████████
// ██████████████████████████████████████████████████████████████████████████████████████████████████████████████

// // □■□■ Change a Cookie with JavaScript

// document.cookie = "userName=Mohammad Mahdi; expires=Thu, 18 Dec 2023 12:00:00 UTC; path=/";

// ██████████████████████████████████████████████████████████████████████████████████████████████████████████████
// ██████████████████████████████████████████████████████████████████████████████████████████████████████████████
// ██████████████████████████████████████████████████████████████████████████████████████████████████████████████
// ██████████████████████████████████████████████████████████████████████████████████████████████████████████████
// ██████████████████████████████████████████████████████████████████████████████████████████████████████████████
// ██████████████████████████████████████████████████████████████████████████████████████████████████████████████

// // □■□■ Delete a Cookie with JavaScript

// document.cookie = "userName=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;";

// ██████████████████████████████████████████████████████████████████████████████████████████████████████████████
// ██████████████████████████████████████████████████████████████████████████████████████████████████████████████
// ██████████████████████████████████████████████████████████████████████████████████████████████████████████████
// ██████████████████████████████████████████████████████████████████████████████████████████████████████████████
// ██████████████████████████████████████████████████████████████████████████████████████████████████████████████
// ██████████████████████████████████████████████████████████████████████████████████████████████████████████████

// □■□■ Useful Function for cookies : 
// □■□■         1 - A function to set a cookie value
// □■□■         2 - A function to get a cookie value
// □■□■         3 - A function to check a cookie value

// █▒▒▒▒▒▒▒▒▒█▒▒▒▒▒▒▒▒▒█▒▒▒▒▒▒▒▒▒█▒▒▒▒▒▒▒▒▒█▒▒▒▒▒▒▒▒▒█▒▒▒▒▒▒▒▒▒
// █▒▒▒▒▒▒▒▒▒█▒▒▒▒▒▒▒▒▒█▒▒▒▒▒▒▒▒▒█▒▒▒▒▒▒▒▒▒█▒▒▒▒▒▒▒▒▒█▒▒▒▒▒▒▒▒▒

// // □■□■ 1 - A function to set a cookie value

// function setCookie(cname, cvalue, exdays) {
//   const d = new Date();
//   d.setTime(d.getTime() + (exdays * 24 * 60 * 60 * 1000));
//   let expires = "expires=" + d.toUTCString();
//   document.cookie = cname + "=" + cvalue + ";" + expires + ";path=/";
// }

// setCookie('theme' , 'light' , '5')
// █▒▒▒▒▒▒▒▒▒█▒▒▒▒▒▒▒▒▒█▒▒▒▒▒▒▒▒▒█▒▒▒▒▒▒▒▒▒█▒▒▒▒▒▒▒▒▒█▒▒▒▒▒▒▒▒▒
// █▒▒▒▒▒▒▒▒▒█▒▒▒▒▒▒▒▒▒█▒▒▒▒▒▒▒▒▒█▒▒▒▒▒▒▒▒▒█▒▒▒▒▒▒▒▒▒█▒▒▒▒▒▒▒▒▒

// // □■□■ 2 - A function to get a cookie value


// function getCookie(cname) {
//   let name = cname + "=";
//   let decodedCookie = decodeURIComponent(document.cookie);
//   let ca = decodedCookie.split(';');
//   for(let i = 0; i <ca.length; i++) {
//     let c = ca[i];
//     while (c.charAt(0) == ' ') {
//       c = c.substring(1);
//     }
//     if (c.indexOf(name) == 0) {
//       return c.substring(name.length, c.length);
//     }
//   }
//   return "";
// }
// let cookieStr = getCookie('theme')
// console.log(cookieStr)

// // □■□■ Function explained:
// // □■□■ Take the cookiename as parameter (cname).
// // □■□■ Create a variable (name) with the text to search for (cname + "=").
// // □■□■ Decode the cookie string, to handle cookies with special characters, e.g. '$'
// // □■□■ Split document.cookie on semicolons into an array called ca (ca = decodedCookie.split(';')).
// // □■□■ Loop through the ca array (i = 0; i < ca.length; i++), and read out each value c = ca[i]).
// // □■□■ If the cookie is found (c.indexOf(name) == 0), return the value of the cookie (c.substring(name.length, c.length).
// // □■□■ If the cookie is not found, return "".

// █▒▒▒▒▒▒▒▒▒█▒▒▒▒▒▒▒▒▒█▒▒▒▒▒▒▒▒▒█▒▒▒▒▒▒▒▒▒█▒▒▒▒▒▒▒▒▒█▒▒▒▒▒▒▒▒▒
// █▒▒▒▒▒▒▒▒▒█▒▒▒▒▒▒▒▒▒█▒▒▒▒▒▒▒▒▒█▒▒▒▒▒▒▒▒▒█▒▒▒▒▒▒▒▒▒█▒▒▒▒▒▒▒▒▒

// // □■□■ 3 - A function to check a cookie value 

// function checkCookie() {
//   let username = getCookie("username");
//   if (username != "") {
//    alert("Welcome again " + username);
//   } else {
//     username = prompt("Please enter your name:", "");
//     if (username != "" && username != null) {
//       setCookie("username", username, 365);
//     }
//   }
// }

// ██████████████████████████████████████████████████████████████████████████████████████████████████████████████
// ██████████████████████████████████████████████████████████████████████████████████████████████████████████████
// ██████████████████████████████████████████████████████████████████████████████████████████████████████████████
// ██████████████████████████████████████████████████████████████████████████████████████████████████████████████
// ██████████████████████████████████████████████████████████████████████████████████████████████████████████████
// ██████████████████████████████████████████████████████████████████████████████████████████████████████████████

// □■□■ Server Cookie Management (theory) :
// □■□■       1 - Server cookies ⯈⯈⯈ are Hash
// □■□■       2 - Server cookies ⯈⯈⯈ cant read or dehash in front-end
// □■□■       3 - Server cookies ⯈⯈⯈ use for Identify User in each request 
// □■□■       4 - Server cookies ⯈⯈⯈ use for Dynamic communication with User and Server

// for more... Look PDF



